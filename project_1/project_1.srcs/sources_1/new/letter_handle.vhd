LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
use ieee.numeric_std.all; 

ENTITY alphabet IS
	PORT (
		x: in unsigned (10 downto 0);
		y: in unsigned (10 downto 0);
		char: in unsigned (4 downto 0); 
		res: in unsigned (2 downto 0);
        size: in unsigned (4 downto 0);
		output: out std_logic_vector (11 downto 0)
		);
END entity;

ARCHITECTURE Behavioral OF alphabet IS 
    signal address: unsigned (9 downto 0);
    constant mem: std_logic_vector (1023 downto
BEGIN  
    address <= shift_right((shift_right(x,TO_INTEGER(res))+5*shift_right(y,TO_INTEGER(res)))+char*25,0) (9 downto 0);
	output <= (others => mem(TO_INTEGER (address))) when x<5*size else "111111111111";
END Behavioral; 